package cn.cza.springboot.modules.sys.service.impl;import cn.cza.springboot.common.utils.Constant;import cn.cza.springboot.modules.sys.dao.SysMenuDao;import cn.cza.springboot.modules.sys.dao.SysUserDao;import cn.cza.springboot.modules.sys.dao.SysUserTokenDao;import cn.cza.springboot.modules.sys.pojo.SysMenuEntity;import cn.cza.springboot.modules.sys.pojo.SysUserEntity;import cn.cza.springboot.modules.sys.pojo.SysUserTokenEntity;import cn.cza.springboot.modules.sys.service.ShiroService;import org.apache.commons.lang.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.*;/** * @Author: 车子昂 * @Date: 2018/12/3 0003 13:55 * @Description: */@Servicepublic class ShiroServiceImpl implements ShiroService {    @Autowired    private SysMenuDao sysMenuDao;    @Autowired    private SysUserDao sysUserDao;    @Autowired    private SysUserTokenDao sysUserTokenDao;    @Override    public Set<String> getUserPermissions(long userId) {        List<String> permsList;        //系统管理员，拥有最高权限        if (userId == Constant.SUPER_ADMIN) {            List<SysMenuEntity> menuList = sysMenuDao.queryList(new HashMap<>());            permsList = new ArrayList<>(menuList.size());            for (SysMenuEntity menu : menuList) {                permsList.add(menu.getPerms());            }        } else {            permsList = sysUserDao.queryAllPerms(userId);        }        //用户权限列表        Set<String> permsSet = new HashSet<>();        for (String perms : permsList) {            if (StringUtils.isBlank(perms)) {                continue;            }            permsSet.addAll(Arrays.asList(perms.trim().split(",")));        }        return permsSet;    }    @Override    public SysUserTokenEntity queryByToken(String token) {        SysUserTokenEntity sysUserTokenEntity = sysUserTokenDao.queryByToken(token);        return sysUserTokenEntity;    }    @Override    public SysUserEntity queryUser(Long userId) {        return sysUserDao.queryObject(userId);    }}